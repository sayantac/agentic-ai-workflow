services:
  postgres:
    image: pgvector/pgvector:pg17
    container_name: postgres_bedrock
    environment:
      POSTGRES_DB: adoptions
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mcp-server:
    image: mcp-server:latest
    container_name: scheduler-mcp-server
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8081/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  ai-agents-bedrock:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        MODULE: ai-agents-bedrock
    container_name: ai-agents-bedrock
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/adoptions
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY=
      - AWS_SECRET_KEY=
      - AWS_SESSION_TOKEN=
      - VECTORSTORE_INITIALIZE=true
    depends_on:
      postgres:
        condition: service_healthy
      mcp-server:
        condition: service_healthy

volumes:
  postgres_data: